name: Release

on:
  push:
    tags:
     - '*'

jobs:
  cd:
    runs-on: windows-latest

    env:
      Actions_Allow_Unsecure_Commands: true
      App_Project_Path: DavesSystemTuner\DavesSystemTuner.csproj
      RELEASE_VERSION: ${{ github.ref }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install .NET CLI
        uses: actions/setup-dotnet@v3

      - name: Restore Project Dependencies
        run: dotnet restore $env:App_Project_Path

      - name: Update Version in app.manifest
        run: |
          [xml] $appManifest = Get-Content ".\DavesSystemTuner\app.manifest"
          echo $appManifest.assembly.assemblyIdentity.version
          $appManifest.assembly.assemblyIdentity.version = $env:RELEASE_VERSION
          echo $appManifest.assembly.assemblyIdentity.version
          $appManifest.Save(".\DavesSystemTuner\app.manifest")

      - name: Build Project for Release
        run: dotnet build $env:App_Project_Path --configuration Release --no-restore

      - name: Publish Project with FolderProfile
        run: dotnet publish $env:App_Project_Path -c Release -p:PublishProfile=FolderProfile --no-restore --no-build

      - name: Install NSIS
        run: |
          iwr -useb get.scoop.sh -outfile 'install.ps1'
          .\install.ps1 -RunAsAdmin
          scoop update
          scoop bucket add extras
          scoop install nsis

      - name: Print NSIS version
        run: makensis -VERSION

      - name: Package Application with Installer
        run: makensis setup.nsi

      - name: Upload Installation Binary to GitHub Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: Setup_DavesSystemTuner_${{ env.RELEASE_VERSION }}.exe
          tag: ${{ env.RELEASE_VERSION }}
          body: "Fixed application hang when removing mods"
